###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/environment.html
###

[app:main]
use = egg:Askomics

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes = pyramid_debugtoolbar


askomics.debug = true

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

### URL to reach the triple store system
### ====================================
###
### askomics.endpoint : endpoint
### (if needed) askomics.updatepoint : alternative URI for update query
### (if needed) askomics.endpoint.username : user login
### (if needed) askomics.endpoint.passwd : user passord
### (if needed) askomics.endpoint.auth : 'Basic' or 'Digest'

# Le graph Askomics. Peux etre modifie pour la gestion de plusieurs bdd
askomics.graph=urn:sparql:tests-askomics:insert:informative1

# Exec service :
# sudo docker run --name fuseki -p 3030:3030 -t askomics/fuseki-2.3.1:latest
#
# FUSEKI DATABASE (askomics/fuseki see in this directory docker/fuseki)
# --------------
#askomics.endpoint = http://localhost:3030/database/query
#askomics.updatepoint = http://localhost:3030/database/update
#askomics.file_upload_url = http://localhost:3030/database/upload
#askomics.max_content_size_to_update_database = 100000
#askomics.hack_virtuoso = False

#
# Exec service :
# sudo docker run --name my-virtuoso -p 8890:8890 -p 1111:1111  -e DBA_PASSWORD=dba -e SPARQL_UPDATE=true -e DEFAULT_GRAPH=http://localhost:8890/DAV  -t tenforce/virtuoso
#
#VIRTUOSO DATABASE
#-----------------
askomics.endpoint = http://localhost:8890/sparql
askomics.max_content_size_to_update_database=500000
askomics.hack_virtuoso=true

#
# Exec service :
# sudo docker run -d -p 10000-10035:10000-10035 --name agraph franzinc/agraph
#
# TODO: create a new repository 'database' on http://localhost:10035 (login: test, passwd: xyzzy)
#
#ALLEGROGRAPH (http://franz.com/agraph/docker/)
#---------------------------------------------
#askomics.endpoint = http://localhost:10035/repositories/database/sparql
#askomics.endpoint.username = test
#askomics.endpoint.passwd = xyzzy
#askomics.max_content_size_to_update_database=10000
#askomics.hack_virtuoso=true

#NEO4J
#------------------------
#askomics.endpoint = http://localhost:7474/db/data
#askomics.endpoint.username = neo4j
#askomics.endpoint.passwd = django

#SESAME (docker subotec) (KO)
#-----------------------------------------------------------------------
#askomics.endpoint = http://localhost:8080/openrdf-sesame/repositories/SYSTEM
#askomics.updatepoint = http://localhost:8080/openrdf-sesame/repositories/SYSTEM/statements
#========================================================================

askomics.prefix           = http://www.semanticweb.org/INRA/igepp/ontologies/2016/1#
askomics.askomicsns       = http://www.semanticweb.org/askomicsns/setting#

askomics.overview_lines_limit = 11
askomics.allowed_file_types = 'text/plain','text/csv','text/tab-separated-values','text/fasta'
askomics.upload_min_size = 1
askomics.upload_max_size = 200000000
# HTTP method used to delete uploaded files (can be POST or DELETE)
askomics.delete_method = DELETE

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.5-branch/narr/logging.html
###

[loggers]
keys = root, askomics

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_askomics]
level = DEBUG
handlers =
qualname = askomics

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
